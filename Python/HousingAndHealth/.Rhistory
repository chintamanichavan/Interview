size = "Alcohol Consumption",
color = "Alcohol Consumption")
# 6. Regression Plot
ggplot(datagram, aes(x = Alcohol, y = Life.expectancy)) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE, color = 'red') +
labs(title = "Regression Plot: Life Expectancy vs Alcohol Consumption",
x = "Alcohol Consumption",
y = "Life Expectancy")
# 7. Grouped Bar Chart
datagram %>%
group_by(Status) %>%
summarise(Avg_Alcohol = mean(Alcohol, na.rm = TRUE),
Avg_Life_Expectancy = mean(Life.expectancy, na.rm = TRUE)) %>%
gather(key = "Metric", value = "Value", -Status) %>%
ggplot(aes(x = Status, y = Value, fill = Metric)) +
geom_bar(stat = 'identity', position = 'dodge') +
labs(title = "Average Alcohol Consumption and Life Expectancy by Country Status",
x = "Status",
y = "Value")
# Load necessary libraries
library(tidyverse)
library(corrplot)
# Load extended data from CSV file and store in 'datagram' variable
datagram <- read.csv("/path/to/Extended_Life_Expectancy_Data.csv")
# Load necessary libraries
library(tidyverse)
library(corrplot)
# Load extended data from CSV file and store in 'datagram' variable
datagram <- read.csv("/Users/chintamanichavan/Desktop/Computer-Science/Interview/Python/HousingAndHealth/Augmented_Life_Expectancy_Data.csv")
# 1. Scatter Plot
# Adjust point size or alpha if plot is too crowded
ggplot(datagram, aes(x = Alcohol, y = Life.expectancy)) +
geom_point() +  # consider adjusting alpha for transparency
labs(title = "Alcohol Consumption vs Life Expectancy",
x = "Alcohol Consumption",
y = "Life Expectancy")
# 2. Correlation Heatmap
# This should work fine but might take longer to compute with larger data
correlations <- cor(datagram[, c("Life.expectancy", "Adult.Mortality", "Alcohol", "percentage.expenditure", "Hepatitis.B")])
corrplot(correlations, method = "color")
# 3. Bubble Plot
# Adjust point size and alpha for better visualization with more data
ggplot(datagram, aes(x = GDP, y = Life.expectancy, size = Alcohol, color = Alcohol)) +
geom_point(alpha = 0.6) +  # adjust alpha as needed
labs(title = "Life Expectancy vs GDP with Alcohol Consumption",
x = "GDP",
y = "Life Expectancy",
size = "Alcohol Consumption",
color = "Alcohol Consumption")
# 6. Regression Plot
# This plot should also work fine but you may consider adjusting the point size
ggplot(datagram, aes(x = Alcohol, y = Life.expectancy)) +
geom_point() +  # consider adjusting alpha or point size
geom_smooth(method = 'lm', se = FALSE, color = 'red') +
labs(title = "Regression Plot: Life Expectancy vs Alcohol Consumption",
x = "Alcohol Consumption",
y = "Life Expectancy")
# 7. Grouped Bar Chart
# This plot should handle more data well, but watch out for any performance issues
datagram %>%
group_by(Status) %>%
summarise(Avg_Alcohol = mean(Alcohol, na.rm = TRUE),
Avg_Life_Expectancy = mean(Life.expectancy, na.rm = TRUE)) %>%
gather(key = "Metric", value = "Value", -Status) %>%
ggplot(aes(x = Status, y = Value, fill = Metric)) +
geom_bar(stat = 'identity', position = 'dodge') +
labs(title = "Average Alcohol Consumption and Life Expectancy by Country Status",
x = "Status",
y = "Value")
# Load necessary libraries
library(tidyverse)
library(corrplot)
# Load extended data from CSV file and store in 'datagram' variable
datagram <- read.csv("/Users/chintamanichavan/Desktop/Computer-Science/Interview/Python/HousingAndHealth/Augmented_Life_Expectancy_Data.csv")
# 1. Scatter Plot
# Adjust point size or alpha if plot is too crowded
ggplot(datagram, aes(x = Alcohol, y = Life.expectancy)) +
geom_point() +  # consider adjusting alpha for transparency
labs(title = "Alcohol Consumption vs Life Expectancy",
x = "Alcohol Consumption",
y = "Life Expectancy")
# 2. Correlation Heatmap
# This should work fine but might take longer to compute with larger data
correlations <- cor(datagram[, c("Life.expectancy", "Adult.Mortality", "Alcohol", "percentage.expenditure", "Hepatitis.B")])
corrplot(correlations, method = "color")
# 3. Bubble Plot
# Adjust point size and alpha for better visualization with more data
ggplot(datagram, aes(x = GDP, y = Life.expectancy, size = Alcohol, color = Alcohol)) +
geom_point(alpha = 0.4) +  # adjust alpha as needed
labs(title = "Life Expectancy vs GDP with Alcohol Consumption",
x = "GDP",
y = "Life Expectancy",
size = "Alcohol Consumption",
color = "Alcohol Consumption")
# 6. Regression Plot
# This plot should also work fine but you may consider adjusting the point size
ggplot(datagram, aes(x = Alcohol, y = Life.expectancy)) +
geom_point() +  # consider adjusting alpha or point size
geom_smooth(method = 'lm', se = FALSE, color = 'red') +
labs(title = "Regression Plot: Life Expectancy vs Alcohol Consumption",
x = "Alcohol Consumption",
y = "Life Expectancy")
# 7. Grouped Bar Chart
# This plot should handle more data well, but watch out for any performance issues
datagram %>%
group_by(Status) %>%
summarise(Avg_Alcohol = mean(Alcohol, na.rm = TRUE),
Avg_Life_Expectancy = mean(Life.expectancy, na.rm = TRUE)) %>%
gather(key = "Metric", value = "Value", -Status) %>%
ggplot(aes(x = Status, y = Value, fill = Metric)) +
geom_bar(stat = 'identity', position = 'dodge') +
labs(title = "Average Alcohol Consumption and Life Expectancy by Country Status",
x = "Status",
y = "Value")
# Load necessary libraries
library(tidyverse)
library(corrplot)
# Load extended data from CSV file and store in 'datagram' variable
datagram <- read.csv("/Users/chintamanichavan/Desktop/Computer-Science/Interview/Python/HousingAndHealth/Augmented_Life_Expectancy_Data.csv")
# 1. Scatter Plot
# Adjust point size or alpha if plot is too crowded
ggplot(datagram, aes(x = Alcohol, y = Life.expectancy)) +
geom_point() +  # consider adjusting alpha for transparency
labs(title = "Alcohol Consumption vs Life Expectancy",
x = "Alcohol Consumption",
y = "Life Expectancy")
# 2. Correlation Heatmap
# This should work fine but might take longer to compute with larger data
correlations <- cor(datagram[, c("Life.expectancy", "Adult.Mortality", "Alcohol", "percentage.expenditure", "Hepatitis.B")])
corrplot(correlations, method = "color")
# 3. Bubble Plot
# Adjust point size and alpha for better visualization with more data
ggplot(datagram, aes(x = GDP, y = Life.expectancy, size = Alcohol, color = Alcohol)) +
geom_point(alpha = 0.2) +  # adjust alpha as needed
labs(title = "Life Expectancy vs GDP with Alcohol Consumption",
x = "GDP",
y = "Life Expectancy",
size = "Alcohol Consumption",
color = "Alcohol Consumption")
# 6. Regression Plot
# This plot should also work fine but you may consider adjusting the point size
ggplot(datagram, aes(x = Alcohol, y = Life.expectancy)) +
geom_point() +  # consider adjusting alpha or point size
geom_smooth(method = 'lm', se = FALSE, color = 'red') +
labs(title = "Regression Plot: Life Expectancy vs Alcohol Consumption",
x = "Alcohol Consumption",
y = "Life Expectancy")
# 7. Grouped Bar Chart
# This plot should handle more data well, but watch out for any performance issues
datagram %>%
group_by(Status) %>%
summarise(Avg_Alcohol = mean(Alcohol, na.rm = TRUE),
Avg_Life_Expectancy = mean(Life.expectancy, na.rm = TRUE)) %>%
gather(key = "Metric", value = "Value", -Status) %>%
ggplot(aes(x = Status, y = Value, fill = Metric)) +
geom_bar(stat = 'identity', position = 'dodge') +
labs(title = "Average Alcohol Consumption and Life Expectancy by Country Status",
x = "Status",
y = "Value")
# Load necessary libraries
library(tidyverse)
library(corrplot)
# Load extended data from CSV file and store in 'datagram' variable
datagram <- read.csv("/Users/chintamanichavan/Desktop/Computer-Science/Interview/Python/HousingAndHealth/Augmented_Life_Expectancy_Data.csv")
# 1. Scatter Plot
# Adjust point size or alpha if plot is too crowded
ggplot(datagram, aes(x = Alcohol, y = Life.expectancy)) +
geom_point() +  # consider adjusting alpha for transparency
labs(title = "Alcohol Consumption vs Life Expectancy",
x = "Alcohol Consumption",
y = "Life Expectancy")
# 2. Correlation Heatmap
# This should work fine but might take longer to compute with larger data
correlations <- cor(datagram[, c("Life.expectancy", "Adult.Mortality", "Alcohol", "percentage.expenditure", "Hepatitis.B")])
corrplot(correlations, method = "color")
# 3. Bubble Plot
# Adjust point size and alpha for better visualization with more data
ggplot(datagram, aes(x = GDP, y = Life.expectancy, size = Alcohol, color = Alcohol)) +
geom_point(alpha = 0.6) +  # adjust alpha as needed
labs(title = "Life Expectancy vs GDP with Alcohol Consumption",
x = "GDP",
y = "Life Expectancy",
size = "Alcohol Consumption",
color = "Alcohol Consumption")
# 6. Regression Plot
# This plot should also work fine but you may consider adjusting the point size
ggplot(datagram, aes(x = Alcohol, y = Life.expectancy)) +
geom_point(width = 0.2, height = 0.2, alpha = 0.5) +  # consider adjusting alpha or point size
geom_smooth(method = 'lm', se = FALSE, color = 'red') +
labs(title = "Regression Plot: Life Expectancy vs Alcohol Consumption",
x = "Alcohol Consumption",
y = "Life Expectancy")
# 7. Grouped Bar Chart
# This plot should handle more data well, but watch out for any performance issues
datagram %>%
group_by(Status) %>%
summarise(Avg_Alcohol = mean(Alcohol, na.rm = TRUE),
Avg_Life_Expectancy = mean(Life.expectancy, na.rm = TRUE)) %>%
gather(key = "Metric", value = "Value", -Status) %>%
ggplot(aes(x = Status, y = Value, fill = Metric)) +
geom_bar(stat = 'identity', position = 'dodge') +
labs(title = "Average Alcohol Consumption and Life Expectancy by Country Status",
x = "Status",
y = "Value")
# Load necessary libraries
library(tidyverse)
library(corrplot)
# Load extended data from CSV file and store in 'datagram' variable
datagram <- read.csv("/Users/chintamanichavan/Desktop/Computer-Science/Interview/Python/HousingAndHealth/Augmented_Life_Expectancy_Data.csv")
# 1. Scatter Plot
# Adjust point size or alpha if plot is too crowded
ggplot(datagram, aes(x = Alcohol, y = Life.expectancy)) +
geom_point() +  # consider adjusting alpha for transparency
labs(title = "Alcohol Consumption vs Life Expectancy",
x = "Alcohol Consumption",
y = "Life Expectancy")
# 2. Correlation Heatmap
# This should work fine but might take longer to compute with larger data
correlations <- cor(datagram[, c("Life.expectancy", "Adult.Mortality", "Alcohol", "percentage.expenditure", "Hepatitis.B")])
corrplot(correlations, method = "color")
# 3. Bubble Plot
# Adjust point size and alpha for better visualization with more data
ggplot(datagram, aes(x = GDP, y = Life.expectancy, size = Alcohol, color = Alcohol)) +
geom_point(alpha = 0.6) +  # adjust alpha as needed
labs(title = "Life Expectancy vs GDP with Alcohol Consumption",
x = "GDP",
y = "Life Expectancy",
size = "Alcohol Consumption",
color = "Alcohol Consumption")
# 6. Regression Plot
# This plot should also work fine but you may consider adjusting the point size
ggplot(datagram, aes(x = Alcohol, y = Life.expectancy)) +
geom_point(width = 0.2, height = 0.2, alpha = 0.5) +  # consider adjusting alpha or point size
geom_smooth(method = 'lm', se = FALSE, color = 'red') +
labs(title = "Regression Plot: Life Expectancy vs Alcohol Consumption",
x = "Alcohol Consumption",
y = "Life Expectancy")
# 7. Grouped Bar Chart
# This plot should handle more data well, but watch out for any performance issues
datagram %>%
group_by(Status) %>%
summarise(Avg_Alcohol = mean(Alcohol, na.rm = TRUE),
Avg_Life_Expectancy = mean(Life.expectancy, na.rm = TRUE)) %>%
gather(key = "Metric", value = "Value", -Status) %>%
ggplot(aes(x = Status, y = Value, fill = Metric)) +
geom_bar(stat = 'identity', position = 'dodge') +
labs(title = "Average Alcohol Consumption and Life Expectancy by Country Status",
x = "Status",
y = "Value")
# Load necessary libraries
library(tidyverse)
library(corrplot)
# Load extended data from CSV file and store in 'datagram' variable
datagram <- read.csv("/Users/chintamanichavan/Desktop/Computer-Science/Interview/Python/HousingAndHealth/Augmented_Life_Expectancy_Data.csv")
# 1. Scatter Plot
# Adjust point size or alpha if plot is too crowded
ggplot(datagram, aes(x = Alcohol, y = Life.expectancy)) +
geom_point() +  # consider adjusting alpha for transparency
labs(title = "Alcohol Consumption vs Life Expectancy",
x = "Alcohol Consumption",
y = "Life Expectancy")
# 2. Correlation Heatmap
# This should work fine but might take longer to compute with larger data
correlations <- cor(datagram[, c("Life.expectancy", "Adult.Mortality", "Alcohol", "percentage.expenditure", "Hepatitis.B")])
corrplot(correlations, method = "color")
# 3. Bubble Plot
# Adjust point size and alpha for better visualization with more data
ggplot(datagram, aes(x = GDP, y = Life.expectancy, size = Alcohol, color = Alcohol)) +
geom_point(alpha = 0.6) +  # adjust alpha as needed
labs(title = "Life Expectancy vs GDP with Alcohol Consumption",
x = "GDP",
y = "Life Expectancy",
size = "Alcohol Consumption",
color = "Alcohol Consumption")
# 6. Regression Plot
# This plot should also work fine but you may consider adjusting the point size
ggplot(datagram, aes(x = Alcohol, y = Life.expectancy)) +
geom_point() +  # consider adjusting alpha or point size
geom_smooth(method = 'lm', se = FALSE, color = 'red') +
labs(title = "Regression Plot: Life Expectancy vs Alcohol Consumption",
x = "Alcohol Consumption",
y = "Life Expectancy")
# 7. Grouped Bar Chart
# This plot should handle more data well, but watch out for any performance issues
datagram %>%
group_by(Status) %>%
summarise(Avg_Alcohol = mean(Alcohol, na.rm = TRUE),
Avg_Life_Expectancy = mean(Life.expectancy, na.rm = TRUE)) %>%
gather(key = "Metric", value = "Value", -Status) %>%
ggplot(aes(x = Status, y = Value, fill = Metric)) +
geom_bar(stat = 'identity', position = 'dodge') +
labs(title = "Average Alcohol Consumption and Life Expectancy by Country Status",
x = "Status",
y = "Value")
# Load necessary libraries
library(tidyverse)
library(corrplot)
# Load extended data from CSV file and store in 'datagram' variable
datagram <- read.csv("/Users/chintamanichavan/Desktop/Computer-Science/Interview/Python/HousingAndHealth/Augmented_Life_Expectancy_Data.csv")
# 1. Scatter Plot
# Adjust point size or alpha if plot is too crowded
ggplot(datagram, aes(x = Alcohol, y = Life.expectancy)) +
geom_point() +  # consider adjusting alpha for transparency
labs(title = "Alcohol Consumption vs Life Expectancy",
x = "Alcohol Consumption",
y = "Life Expectancy")
# 2. Correlation Heatmap
# This should work fine but might take longer to compute with larger data
correlations <- cor(datagram[, c("Life.expectancy", "Adult.Mortality", "Alcohol", "percentage.expenditure", "Hepatitis.B")])
corrplot(correlations, method = "color")
# 3. Bubble Plot
# Adjust point size and alpha for better visualization with more data
ggplot(datagram, aes(x = GDP, y = Life.expectancy, size = Alcohol, color = Alcohol)) +
geom_point(alpha = 0.6) +  # adjust alpha as needed
labs(title = "Life Expectancy vs GDP with Alcohol Consumption",
x = "GDP",
y = "Life Expectancy",
size = "Alcohol Consumption",
color = "Alcohol Consumption")
# 6. Regression Plot
# This plot should also work fine but you may consider adjusting the point size
ggplot(datagram, aes(x = Alcohol, y = Life.expectancy)) +
geom_point() +  # consider adjusting alpha or point size
geom_smooth(method = 'lm', se = FALSE, color = 'red') +
labs(title = "Regression Plot: Life Expectancy vs Alcohol Consumption",
x = "Alcohol Consumption",
y = "Life Expectancy")
# 7. Grouped Bar Chart
# This plot should handle more data well, but watch out for any performance issues
datagram %>%
group_by(Status) %>%
summarise(Avg_Alcohol = mean(Alcohol, na.rm = TRUE),
Avg_Life_Expectancy = mean(Life.expectancy, na.rm = TRUE)) %>%
gather(key = "Metric", value = "Value", -Status) %>%
ggplot(aes(x = Status, y = Value, fill = Metric)) +
geom_bar(stat = 'identity', position = 'dodge') +
labs(title = "Average Alcohol Consumption and Life Expectancy by Country Status",
x = "Status",
y = "Value")
# Load necessary libraries
library(readxl)
library(dplyr)
library(ggplot2)
# Load and clean data
data <- read_excel("/Users/chintamanichavan/Desktop/Computer-Science/Interview/Python/HousingAndHealth/File for Midterm.xlsx", sheet = "Sheet1")
cleaned_data <- na.omit(data)
# Separate data for NY and FL
ny_data <- filter(cleaned_data, Location == "NY")
fl_data <- filter(cleaned_data, Location == "FL")
# Calculate mean prices and crime ratings for NY and FL
mean_prices <- cleaned_data %>% group_by(Location) %>% summarise(Average_Price = mean(Price))
mean_crime_ratings <- cleaned_data %>% group_by(Location) %>% summarise(Average_Crime = mean(`Crime Rating`))
# Correlation between price and crime rating
correlation <- cor(cleaned_data$Price, cleaned_data$`Crime Rating`)
# Suzie's financial details
down_payment <- 100000
annual_income_ny <- 120000
annual_income_fl <- 75000
# Calculating average mortgage amount in each state after down payment
average_mortgage_ny <- mean_prices$Average_Price[mean_prices$Location == "NY"] - down_payment
average_mortgage_fl <- mean_prices$Average_Price[mean_prices$Location == "FL"] - down_payment
# Mortgage payment calculations
mortgage_payment_ny <- 0.30 * annual_income_ny
mortgage_payment_fl <- 0.30 * annual_income_fl
# Time to pay off the mortgage
years_to_payoff_ny <- average_mortgage_ny / mortgage_payment_ny
years_to_payoff_fl <- average_mortgage_fl / mortgage_payment_fl
# Preparing data for visualization
visualization_data <- data.frame(
State = c("NY", "FL"),
Average_Price = c(mean_prices$Average_Price[mean_prices$Location == "NY"],
mean_prices$Average_Price[mean_prices$Location == "FL"]),
Average_Crime_Rating = c(mean_crime_ratings$Average_Crime[mean_crime_ratings$Location == "NY"],
mean_crime_ratings$Average_Crime[mean_crime_ratings$Location == "FL"]),
Years_to_Payoff = c(years_to_payoff_ny, years_to_payoff_fl)
)
# Plotting Average Price Comparison
ggplot(visualization_data, aes(x = State, y = Average_Price, fill = State)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Average House Price Comparison", x = "State", y = "Average Price ($)")
# Plotting Average Crime Rating Comparison
ggplot(visualization_data, aes(x = State, y = Average_Crime_Rating, fill = State)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Average Crime Rating Comparison", x = "State", y = "Average Crime Rating")
# Plotting Years to Payoff Comparison
ggplot(visualization_data, aes(x = State, y = Years_to_Payoff, fill = State)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Years to Pay Off Mortgage", x = "State", y = "Years")
# Load necessary libraries
library(readxl)
library(dplyr)
library(ggplot2)
# Load and clean data
data <- read_excel("/Users/chintamanichavan/Desktop/Computer-Science/Interview/Python/HousingAndHealth/File for Midterm.xlsx", sheet = "Sheet1")
cleaned_data <- na.omit(data)
# Separate data for NY and FL
ny_data <- filter(cleaned_data, Location == "NY")
fl_data <- filter(cleaned_data, Location == "FL")
# Calculate mean prices and crime ratings for NY and FL
mean_prices <- cleaned_data %>% group_by(Location) %>% summarise(Average_Price = mean(Price))
mean_crime_ratings <- cleaned_data %>% group_by(Location) %>% summarise(Average_Crime = mean(`Crime Rating`))
# Correlation between price and crime rating
correlation <- cor(cleaned_data$Price, cleaned_data$`Crime Rating`)
# Suzie's financial details
down_payment <- 100000
annual_income_ny <- 120000
annual_income_fl <- 75000
# Calculating average mortgage amount in each state after down payment
average_mortgage_ny <- mean_prices$Average_Price[mean_prices$Location == "NY"] - down_payment
average_mortgage_fl <- mean_prices$Average_Price[mean_prices$Location == "FL"] - down_payment
# Mortgage payment calculations
mortgage_payment_ny <- 0.30 * annual_income_ny
mortgage_payment_fl <- 0.30 * annual_income_fl
# Time to pay off the mortgage
years_to_payoff_ny <- average_mortgage_ny / mortgage_payment_ny
years_to_payoff_fl <- average_mortgage_fl / mortgage_payment_fl
# Preparing data for visualization
visualization_data <- data.frame(
State = c("NY", "FL"),
Average_Price = c(mean_prices$Average_Price[mean_prices$Location == "NY"],
mean_prices$Average_Price[mean_prices$Location == "FL"]),
Average_Crime_Rating = c(mean_crime_ratings$Average_Crime[mean_crime_ratings$Location == "NY"],
mean_crime_ratings$Average_Crime[mean_crime_ratings$Location == "FL"]),
Years_to_Payoff = c(years_to_payoff_ny, years_to_payoff_fl)
)
# Plotting Average Price Comparison
ggplot(visualization_data, aes(x = State, y = Average_Price, fill = State)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Average House Price Comparison", x = "State", y = "Average Price ($)")
# Plotting Average Crime Rating Comparison
ggplot(visualization_data, aes(x = State, y = Average_Crime_Rating, fill = State)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Average Crime Rating Comparison", x = "State", y = "Average Crime Rating")
# Plotting Years to Payoff Comparison
ggplot(visualization_data, aes(x = State, y = Years_to_Payoff, fill = State)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Years to Pay Off Mortgage", x = "State", y = "Years")
View(mean_prices)
View(mean_crime_ratings)
View(ny_data)
View(mean_prices)
View(mean_prices)
View(mean_prices)
# Load necessary libraries
library(readxl)
library(dplyr)
library(ggplot2)
# Load and clean data
data <- read_excel("/Users/chintamanichavan/Desktop/Computer-Science/Interview/Python/HousingAndHealth/File for Midterm.xlsx", sheet = "Sheet1")
cleaned_data <- na.omit(data)
# Separate data for NY and FL
ny_data <- filter(cleaned_data, Location == "NY")
fl_data <- filter(cleaned_data, Location == "FL")
# Calculate mean prices and crime ratings for NY and FL
mean_prices <- cleaned_data %>% group_by(Location) %>% summarise(Average_Price = mean(Price))
mean_crime_ratings <- cleaned_data %>% group_by(Location) %>% summarise(Average_Crime = mean(`Crime Rating`))
# Correlation between price and crime rating
correlation <- cor(cleaned_data$Price, cleaned_data$`Crime Rating`)
# Creating a scatter plot for the correlation between house prices and crime ratings
ggplot(cleaned_data, aes(x = Price, y = `Crime Rating`)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") + # Adding a linear regression line
theme_minimal() +
labs(title = "Correlation between House Prices and Crime Ratings",
x = "House Price ($)",
y = "Crime Rating") +
annotate("text", x = max(cleaned_data$Price) * 0.6, y = max(cleaned_data$`Crime Rating`),
label = paste("Correlation: ", round(correlation, 2)), size = 5)
# Suzie's financial details
down_payment <- 100000
annual_income_ny <- 120000
annual_income_fl <- 75000
# Calculating average mortgage amount in each state after down payment
average_mortgage_ny <- mean_prices$Average_Price[mean_prices$Location == "NY"] - down_payment
average_mortgage_fl <- mean_prices$Average_Price[mean_prices$Location == "FL"] - down_payment
# Mortgage payment calculations
mortgage_payment_ny <- 0.30 * annual_income_ny
mortgage_payment_fl <- 0.30 * annual_income_fl
# Time to pay off the mortgage
years_to_payoff_ny <- average_mortgage_ny / mortgage_payment_ny
years_to_payoff_fl <- average_mortgage_fl / mortgage_payment_fl
# Preparing data for visualization
visualization_data <- data.frame(
State = c("NY", "FL"),
Average_Price = c(mean_prices$Average_Price[mean_prices$Location == "NY"],
mean_prices$Average_Price[mean_prices$Location == "FL"]),
Average_Crime_Rating = c(mean_crime_ratings$Average_Crime[mean_crime_ratings$Location == "NY"],
mean_crime_ratings$Average_Crime[mean_crime_ratings$Location == "FL"]),
Years_to_Payoff = c(years_to_payoff_ny, years_to_payoff_fl)
)
# Plotting Average Price Comparison
ggplot(visualization_data, aes(x = State, y = Average_Price, fill = State)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Average House Price Comparison", x = "State", y = "Average Price ($)")
# Plotting Average Crime Rating Comparison
ggplot(visualization_data, aes(x = State, y = Average_Crime_Rating, fill = State)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Average Crime Rating Comparison", x = "State", y = "Average Crime Rating")
# Plotting Years to Payoff Comparison
ggplot(visualization_data, aes(x = State, y = Years_to_Payoff, fill = State)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Years to Pay Off Mortgage", x = "State", y = "Years")
